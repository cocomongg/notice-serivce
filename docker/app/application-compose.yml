version: '3.8'
services:
  # spring application
  springboot:
    build: ../../../notice
    container_name: notice-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/notice?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  # mysql
  mysql:
    image: mysql:8.0
    container_name: mysql8
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: notice
    ports:
      - "3307:3306"
    volumes:
      - notice-mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --skip-character-set-client-handshake
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "--silent" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # redis
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    volumes:
      - notice-redis-data:/data
    ports:
      - "6380:6379"
    networks:
      - app-network

networks:
  app-network:

volumes:
  notice-mysql-data:
  notice-redis-data: